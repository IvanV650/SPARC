

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Aug 21 08:47:27 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4585
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F4585 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     _RCSTAbits	set	4011
    51  0000                     _BAUDCONbits	set	4024
    52  0000                     _TXSTAbits	set	4012
    53  0000                     _SPBRG1	set	4015
    54  0000                     _TRISCbits	set	3988
    55  0000                     _ADCON1bits	set	4033
    56  0000                     _TXREG1	set	4013
    57  0000                     _TXSTA1bits	set	4012
    58  0000                     _LATB	set	3978
    59  0000                     _RCREG1	set	4014
    60  0000                     _PIR1bits	set	3998
    61                           
    62                           ; #config settings
    63  0000                     
    64                           	psect	cinit
    65  000142                     __pcinit:
    66                           	opt callstack 0
    67  000142                     start_initialization:
    68                           	opt callstack 0
    69  000142                     __initialization:
    70                           	opt callstack 0
    71  000142                     end_of_initialization:
    72                           	opt callstack 0
    73  000142                     __end_of__initialization:
    74                           	opt callstack 0
    75  000142  9004               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    76  000144  9204               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    77  000146  0100               	movlb	0
    78  000148  EF16  F000         	goto	_main	;jump to C main() function
    79                           
    80                           	psect	cstackCOMRAM
    81  000001                     __pcstackCOMRAM:
    82                           	opt callstack 0
    83  000001                     ??_low_isr:
    84  000001                     
    85                           ; 1 bytes @ 0x0
    86  000001                     	ds	1
    87  000002                     main@viene:
    88                           	opt callstack 0
    89                           
    90                           ; 1 bytes @ 0x1
    91  000002                     	ds	1
    92  000003                     main@va:
    93                           	opt callstack 0
    94                           
    95                           ; 1 bytes @ 0x2
    96  000003                     	ds	1
    97                           
    98 ;;
    99 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   100 ;;
   101 ;; *************** function _main *****************
   102 ;; Defined at:
   103 ;;		line 26 in file "ALV.c"
   104 ;; Parameters:    Size  Location     Type
   105 ;;		None
   106 ;; Auto vars:     Size  Location     Type
   107 ;;  va              1    2[COMRAM] unsigned char 
   108 ;;  viene           1    1[COMRAM] unsigned char 
   109 ;; Return value:  Size  Location     Type
   110 ;;                  1    wreg      void 
   111 ;; Registers used:
   112 ;;		wreg, status,2, status,0, cstack
   113 ;; Tracked objects:
   114 ;;		On entry : 0/0
   115 ;;		On exit  : 0/0
   116 ;;		Unchanged: 0/0
   117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   119 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   121 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   122 ;;Total ram usage:        2 bytes
   123 ;; Hardware stack levels required when called:    3
   124 ;; This function calls:
   125 ;;		_portInit
   126 ;; This function is called by:
   127 ;;		Startup code after reset
   128 ;; This function uses a non-reentrant model
   129 ;;
   130                           
   131                           	psect	text0
   132  00002C                     __ptext0:
   133                           	opt callstack 0
   134  00002C                     _main:
   135                           	opt callstack 28
   136  00002C                     
   137                           ;ALV.c: 27:     unsigned char viene ;;ALV.c: 28:     unsigned char va ;;ALV.c: 29:     p
      +                          ortInit ( );
   138  00002C  EC92  F000         	call	_portInit	;wreg free
   139  000030                     l772:
   140                           
   141                           ;ALV.c: 32:         if (PIR1bits.RCIF == 1){
   142  000030  AA9E               	btfss	158,5,c	;volatile
   143  000032  EF1D  F000         	goto	u11
   144  000036  EF1F  F000         	goto	u10
   145  00003A                     u11:
   146  00003A  EF25  F000         	goto	l778
   147  00003E                     u10:
   148  00003E                     
   149                           ;ALV.c: 33:             viene = RCREG1;
   150  00003E  CFAE F002          	movff	4014,main@viene	;volatile
   151                           
   152                           ;ALV.c: 34:             LATB = viene;
   153  000042  C002  FF8A         	movff	main@viene,3978	;volatile
   154  000046                     
   155                           ;ALV.c: 35:             RCREG1 = 0;
   156  000046  0E00               	movlw	0
   157  000048  6EAE               	movwf	174,c	;volatile
   158  00004A                     l778:
   159                           
   160                           ;ALV.c: 37:         if(viene != va){
   161  00004A  5003               	movf	main@va^0,w,c
   162  00004C  1802               	xorwf	main@viene^0,w,c
   163  00004E  B4D8               	btfsc	status,2,c
   164  000050  EF2C  F000         	goto	u21
   165  000054  EF2E  F000         	goto	u20
   166  000058                     u21:
   167  000058  EF18  F000         	goto	l772
   168  00005C                     u20:
   169  00005C                     
   170                           ;ALV.c: 38:             if (TXSTA1bits.TRMT == 1 ){
   171  00005C  A2AC               	btfss	172,1,c	;volatile
   172  00005E  EF33  F000         	goto	u31
   173  000062  EF35  F000         	goto	u30
   174  000066                     u31:
   175  000066  EF18  F000         	goto	l772
   176  00006A                     u30:
   177  00006A                     
   178                           ;ALV.c: 39:                 va = viene +1;
   179  00006A  2802               	incf	main@viene^0,w,c
   180  00006C  6E03               	movwf	main@va^0,c
   181                           
   182                           ;ALV.c: 40:                 if(va == 58){
   183  00006E  0E3A               	movlw	58
   184  000070  1803               	xorwf	main@va^0,w,c
   185  000072  A4D8               	btfss	status,2,c
   186  000074  EF3E  F000         	goto	u41
   187  000078  EF40  F000         	goto	u40
   188  00007C                     u41:
   189  00007C  EF42  F000         	goto	l786
   190  000080                     u40:
   191  000080                     
   192                           ;ALV.c: 41:                     va = 48;
   193  000080  0E30               	movlw	48
   194  000082  6E03               	movwf	main@va^0,c
   195  000084                     l786:
   196                           
   197                           ;ALV.c: 43:                 if(va == 123){
   198  000084  0E7B               	movlw	123
   199  000086  1803               	xorwf	main@va^0,w,c
   200  000088  A4D8               	btfss	status,2,c
   201  00008A  EF49  F000         	goto	u51
   202  00008E  EF4B  F000         	goto	u50
   203  000092                     u51:
   204  000092  EF4D  F000         	goto	l790
   205  000096                     u50:
   206  000096                     
   207                           ;ALV.c: 44:                     va = 97;
   208  000096  0E61               	movlw	97
   209  000098  6E03               	movwf	main@va^0,c
   210  00009A                     l790:
   211                           
   212                           ;ALV.c: 46:                   if(va == 91){
   213  00009A  0E5B               	movlw	91
   214  00009C  1803               	xorwf	main@va^0,w,c
   215  00009E  A4D8               	btfss	status,2,c
   216  0000A0  EF54  F000         	goto	u61
   217  0000A4  EF56  F000         	goto	u60
   218  0000A8                     u61:
   219  0000A8  EF58  F000         	goto	l794
   220  0000AC                     u60:
   221  0000AC                     
   222                           ;ALV.c: 47:                     va = 65;
   223  0000AC  0E41               	movlw	65
   224  0000AE  6E03               	movwf	main@va^0,c
   225  0000B0                     l794:
   226                           
   227                           ;ALV.c: 49:                 if( va >47 && va <58 || va >96 && va <123 || va >64 && va <9
      +                          1 ){
   228  0000B0  0E2F               	movlw	47
   229  0000B2  6403               	cpfsgt	main@va^0,c
   230  0000B4  EF5E  F000         	goto	u71
   231  0000B8  EF60  F000         	goto	u70
   232  0000BC                     u71:
   233  0000BC  EF68  F000         	goto	l798
   234  0000C0                     u70:
   235  0000C0  0E39               	movlw	57
   236  0000C2  6403               	cpfsgt	main@va^0,c
   237  0000C4  EF66  F000         	goto	u81
   238  0000C8  EF68  F000         	goto	u80
   239  0000CC                     u81:
   240  0000CC  EF88  F000         	goto	l52
   241  0000D0                     u80:
   242  0000D0                     l798:
   243  0000D0  0E60               	movlw	96
   244  0000D2  6403               	cpfsgt	main@va^0,c
   245  0000D4  EF6E  F000         	goto	u91
   246  0000D8  EF70  F000         	goto	u90
   247  0000DC                     u91:
   248  0000DC  EF78  F000         	goto	l802
   249  0000E0                     u90:
   250  0000E0  0E7A               	movlw	122
   251  0000E2  6403               	cpfsgt	main@va^0,c
   252  0000E4  EF76  F000         	goto	u101
   253  0000E8  EF78  F000         	goto	u100
   254  0000EC                     u101:
   255  0000EC  EF88  F000         	goto	l52
   256  0000F0                     u100:
   257  0000F0                     l802:
   258  0000F0  0E40               	movlw	64
   259  0000F2  6403               	cpfsgt	main@va^0,c
   260  0000F4  EF7E  F000         	goto	u111
   261  0000F8  EF80  F000         	goto	u110
   262  0000FC                     u111:
   263  0000FC  EF8E  F000         	goto	l45
   264  000100                     u110:
   265  000100  0E5B               	movlw	91
   266  000102  6003               	cpfslt	main@va^0,c
   267  000104  EF86  F000         	goto	u121
   268  000108  EF88  F000         	goto	u120
   269  00010C                     u121:
   270  00010C  EF8E  F000         	goto	l45
   271  000110                     u120:
   272  000110                     l52:
   273                           
   274                           ;ALV.c: 50:                     TXREG1 = va;
   275  000110  C003  FFAD         	movff	main@va,4013	;volatile
   276                           
   277                           ;ALV.c: 51:                 va = viene;
   278  000114  C002  F003         	movff	main@viene,main@va
   279  000118  EF18  F000         	goto	l772
   280  00011C                     l45:
   281  00011C  EF18  F000         	goto	l772
   282  000120  EF14  F000         	goto	start
   283  000124                     __end_of_main:
   284                           	opt callstack 0
   285                           
   286 ;; *************** function _portInit *****************
   287 ;; Defined at:
   288 ;;		line 63 in file "ALV.c"
   289 ;; Parameters:    Size  Location     Type
   290 ;;		None
   291 ;; Auto vars:     Size  Location     Type
   292 ;;		None
   293 ;; Return value:  Size  Location     Type
   294 ;;                  1    wreg      void 
   295 ;; Registers used:
   296 ;;		wreg, status,2
   297 ;; Tracked objects:
   298 ;;		On entry : 0/0
   299 ;;		On exit  : 0/0
   300 ;;		Unchanged: 0/0
   301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   306 ;;Total ram usage:        0 bytes
   307 ;; Hardware stack levels used:    1
   308 ;; Hardware stack levels required when called:    2
   309 ;; This function calls:
   310 ;;		Nothing
   311 ;; This function is called by:
   312 ;;		_main
   313 ;; This function uses a non-reentrant model
   314 ;;
   315                           
   316                           	psect	text1
   317  000124                     __ptext1:
   318                           	opt callstack 0
   319  000124                     _portInit:
   320                           	opt callstack 28
   321  000124                     
   322                           ;ALV.c: 64:     ADCON1bits.PCFG = 0xFF;
   323  000124  0E0F               	movlw	15
   324  000126  12C1               	iorwf	193,f,c	;volatile
   325  000128                     
   326                           ;ALV.c: 65:     TRISCbits.RC6 = 0;
   327  000128  9C94               	bcf	148,6,c	;volatile
   328  00012A                     
   329                           ;ALV.c: 66:     TRISCbits.RC7 = 1;
   330  00012A  8E94               	bsf	148,7,c	;volatile
   331  00012C  0E2A               	movlw	42
   332  00012E  6EAF               	movwf	175,c	;volatile
   333  000130                     
   334                           ;ALV.c: 69:     TXSTAbits.BRGH = 1 ;
   335  000130  84AC               	bsf	172,2,c	;volatile
   336  000132                     
   337                           ;ALV.c: 70:     BAUDCONbits.BRG16 = 1;
   338  000132  86B8               	bsf	184,3,c	;volatile
   339  000134                     
   340                           ;ALV.c: 72:     TXSTAbits.TX9 = 0;
   341  000134  9CAC               	bcf	172,6,c	;volatile
   342  000136                     
   343                           ;ALV.c: 73:     TXSTAbits.TXEN = 1;
   344  000136  8AAC               	bsf	172,5,c	;volatile
   345  000138                     
   346                           ;ALV.c: 74:     TXSTAbits.SYNC = 0;
   347  000138  98AC               	bcf	172,4,c	;volatile
   348  00013A                     
   349                           ;ALV.c: 75:     RCSTAbits.SPEN = 1;
   350  00013A  8EAB               	bsf	171,7,c	;volatile
   351  00013C                     
   352                           ;ALV.c: 76:     RCSTAbits.RX9 = 0;
   353  00013C  9CAB               	bcf	171,6,c	;volatile
   354  00013E                     
   355                           ;ALV.c: 77:     RCSTAbits.CREN = 1;
   356  00013E  88AB               	bsf	171,4,c	;volatile
   357  000140  0012               	return		;funcret
   358  000142                     __end_of_portInit:
   359                           	opt callstack 0
   360                           
   361 ;; *************** function _low_isr *****************
   362 ;; Defined at:
   363 ;;		line 19 in file "ALV.c"
   364 ;; Parameters:    Size  Location     Type
   365 ;;		None
   366 ;; Auto vars:     Size  Location     Type
   367 ;;		None
   368 ;; Return value:  Size  Location     Type
   369 ;;                  1    wreg      void 
   370 ;; Registers used:
   371 ;;		None
   372 ;; Tracked objects:
   373 ;;		On entry : 0/0
   374 ;;		On exit  : 0/0
   375 ;;		Unchanged: 0/0
   376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   379 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   380 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   381 ;;Total ram usage:        1 bytes
   382 ;; Hardware stack levels used:    1
   383 ;; Hardware stack levels required when called:    1
   384 ;; This function calls:
   385 ;;		Nothing
   386 ;; This function is called by:
   387 ;;		Interrupt level 1
   388 ;; This function uses a non-reentrant model
   389 ;;
   390                           
   391                           	psect	intcodelo
   392  000018                     __pintcodelo:
   393                           	opt callstack 0
   394  000018                     _low_isr:
   395                           	opt callstack 28
   396                           
   397                           ;incstack = 0
   398  000018  8004               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   399  00001A  CFE0 F001          	movff	bsr,??_low_isr
   400  00001E                     
   401                           ;ALV.c: 20:     __nop();
   402  00001E  F000               	nop	
   403  000020  C001  FFE0         	movff	??_low_isr,bsr
   404  000024  9004               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   405  000026  0010               	retfie	
   406  000028                     __end_of_low_isr:
   407                           	opt callstack 0
   408                           
   409 ;; *************** function _high_isr *****************
   410 ;; Defined at:
   411 ;;		line 15 in file "ALV.c"
   412 ;; Parameters:    Size  Location     Type
   413 ;;		None
   414 ;; Auto vars:     Size  Location     Type
   415 ;;		None
   416 ;; Return value:  Size  Location     Type
   417 ;;                  1    wreg      void 
   418 ;; Registers used:
   419 ;;		None
   420 ;; Tracked objects:
   421 ;;		On entry : 0/0
   422 ;;		On exit  : 0/0
   423 ;;		Unchanged: 0/0
   424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   429 ;;Total ram usage:        0 bytes
   430 ;; Hardware stack levels used:    1
   431 ;; This function calls:
   432 ;;		Nothing
   433 ;; This function is called by:
   434 ;;		Interrupt level 2
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438                           	psect	intcode
   439  000008                     __pintcode:
   440                           	opt callstack 0
   441  000008                     _high_isr:
   442                           	opt callstack 28
   443                           
   444                           ;incstack = 0
   445  000008  8204               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   446  00000A  EDA6  F000         	call	int_func,f	;refresh shadow registers
   447                           
   448                           	psect	intcode_body
   449  00014C                     __pintcode_body:
   450                           	opt callstack 28
   451  00014C                     int_func:
   452                           	opt callstack 28
   453  00014C  0006               	pop		; remove dummy address from shadow register refresh
   454  00014E                     
   455                           ;ALV.c: 16:     __nop();
   456  00014E  F000               	nop	
   457  000150  9204               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   458  000152  0011               	retfie		f
   459  000154                     __end_of_high_isr:
   460                           	opt callstack 0
   461  0000                     
   462                           	psect	rparam
   463  0000                     
   464                           	psect	temp
   465  000004                     btemp:
   466                           	opt callstack 0
   467  000004                     	ds	1
   468  0000                     int$flags	set	btemp
   469  0000                     wtemp8	set	btemp+1
   470  0000                     ttemp5	set	btemp+1
   471  0000                     ttemp6	set	btemp+4
   472  0000                     ttemp7	set	btemp+8
   473                           tosu	equ	0xFFF
   474                           tosh	equ	0xFFE
   475                           tosl	equ	0xFFD
   476                           stkptr	equ	0xFFC
   477                           pclatu	equ	0xFFB
   478                           pclath	equ	0xFFA
   479                           pcl	equ	0xFF9
   480                           tblptru	equ	0xFF8
   481                           tblptrh	equ	0xFF7
   482                           tblptrl	equ	0xFF6
   483                           tablat	equ	0xFF5
   484                           prodh	equ	0xFF4
   485                           prodl	equ	0xFF3
   486                           indf0	equ	0xFEF
   487                           postinc0	equ	0xFEE
   488                           postdec0	equ	0xFED
   489                           preinc0	equ	0xFEC
   490                           plusw0	equ	0xFEB
   491                           fsr0h	equ	0xFEA
   492                           fsr0l	equ	0xFE9
   493                           wreg	equ	0xFE8
   494                           indf1	equ	0xFE7
   495                           postinc1	equ	0xFE6
   496                           postdec1	equ	0xFE5
   497                           preinc1	equ	0xFE4
   498                           plusw1	equ	0xFE3
   499                           fsr1h	equ	0xFE2
   500                           fsr1l	equ	0xFE1
   501                           bsr	equ	0xFE0
   502                           indf2	equ	0xFDF
   503                           postinc2	equ	0xFDE
   504                           postdec2	equ	0xFDD
   505                           preinc2	equ	0xFDC
   506                           plusw2	equ	0xFDB
   507                           fsr2h	equ	0xFDA
   508                           fsr2l	equ	0xFD9
   509                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      3       3
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     225
                                              1 COMRAM     2     2      0
                           _portInit
 ---------------------------------------------------------------------------------
 (1) _portInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _low_isr                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _portInit

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      3       3       1        3.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BIGRAM             CFF      0       0      31        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Aug 21 08:47:27 2019

                     l52 0110                       l45 011C                       l67 012C  
                     l68 0140                       u10 003E                       u11 003A  
                     u20 005C                       u21 0058                       u30 006A  
                     u31 0066                       u40 0080                       u41 007C  
                     u50 0096                       u51 0092                       u60 00AC  
                     u61 00A8                       u70 00C0                       u71 00BC  
                     u80 00D0                       u81 00CC                       u90 00E0  
                     u91 00DC                       bsr 000FE0              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
            __CFG_OSC$HS 000000                      l800 00E0                      l802 00F0  
                    l804 0100                      l750 0130                      l760 013A  
                    l752 0132                      l744 0124                      l762 013C  
                    l754 0134                      l746 0128                      l770 002C  
                    l764 013E                      l756 0136                      l748 012A  
                    l780 005C                      l772 0030                      l758 0138  
                    l790 009A                      l782 006A                      l774 003E  
                    l792 00AC                      l784 0080                      l776 0046  
                    l794 00B0                      l786 0084                      l778 004A  
                    l796 00C0                      l788 0096                      l798 00D0  
           __CFG_CPB$OFF 000000                      u100 00F0                      u101 00EC  
                    u110 0100                      u111 00FC                      u120 0110  
                    u121 010C             __CFG_CPD$OFF 000000               _TXSTA1bits 000FAC  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     _LATB 000F8A  
                   i1l38 0020                     i2l33 0150             __CFG_PWRT$ON 000000  
                   _main 002C                     btemp 0004                     start 0028  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
                  ?_main 0001                    i1l768 001E                    i2l766 014E  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000          __end_of_low_isr 0028  
         __CFG_BOREN$OFF 000000                    ttemp5 0005                    ttemp6 0008  
                  ttemp7 000C                    status 000FD8                    wtemp8 0005  
         __CFG_PBADEN$ON 000000          __initialization 0142             __end_of_main 0124  
                 ??_main 0002            __activetblptr 000000          __CFG_BBSIZ$1024 000000  
                 _RCREG1 000FAE                   _SPBRG1 000FAF                   _TXREG1 000FAD  
         __CFG_XINST$OFF 000000         __end_of_high_isr 0154           __CFG_STVREN$ON 000000  
                 main@va 0003         __end_of_portInit 0142                ??_low_isr 0001  
             __accesstop 0060  __end_of__initialization 0142            ___rparam_used 000001  
         __pcstackCOMRAM 0001                ?_high_isr 0001                  __Hparam 0000  
                __Lparam 0000                ?_portInit 0001                  __pcinit 0142  
                __ramtop 0D00                  __ptext0 002C                  __ptext1 0124  
                _low_isr 0018               ??_high_isr 0001           __pintcode_body 014C  
   end_of_initialization 0142                  int_func 014C                _RCSTAbits 000FAB  
             ??_portInit 0002                _TRISCbits 000F94                _TXSTAbits 000FAC  
            _BAUDCONbits 000FB8      start_initialization 0142         __CFG_LPT1OSC$OFF 000000  
      __size_of_high_isr 014C                __pintcode 0008              __pintcodelo 0018  
      __size_of_portInit 001E                 ?_low_isr 0001                 _PIR1bits 000F9E  
       __CFG_WDTPS$32768 000000               _ADCON1bits 000FC1                main@viene 0002  
               __Hrparam 0000                 __Lrparam 0000         __size_of_low_isr 0010  
               _high_isr 0008            __size_of_main 00F8                 _portInit 0124  
               int$flags 0004                 intlevel1 0000                 intlevel2 0000  
