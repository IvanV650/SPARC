

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Aug 19 15:58:42 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4585
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F4585 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     _TRISCbits	set	3988
    51  0000                     _LATC	set	3979
    52  0000                     _LATB	set	3978
    53  0000                     _RCSTA1bits	set	4011
    54  0000                     _BAUDCONbits	set	4024
    55  0000                     _TXSTAbits	set	4012
    56  0000                     _SPBRG1	set	4015
    57  0000                     _ADCON1bits	set	4033
    58  0000                     _TXREG1	set	4013
    59  0000                     _TXSTA1bits	set	4012
    60  0000                     _RCREG1	set	4014
    61  0000                     _PIR1bits	set	3998
    62                           
    63                           ; #config settings
    64  0000                     
    65                           	psect	cinit
    66  000146                     __pcinit:
    67                           	opt callstack 0
    68  000146                     start_initialization:
    69                           	opt callstack 0
    70  000146                     __initialization:
    71                           	opt callstack 0
    72  000146                     end_of_initialization:
    73                           	opt callstack 0
    74  000146                     __end_of__initialization:
    75                           	opt callstack 0
    76  000146  9004               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    77  000148  9204               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    78  00014A  0100               	movlb	0
    79  00014C  EF16  F000         	goto	_main	;jump to C main() function
    80                           
    81                           	psect	cstackCOMRAM
    82  000001                     __pcstackCOMRAM:
    83                           	opt callstack 0
    84  000001                     ??_low_isr:
    85  000001                     
    86                           ; 1 bytes @ 0x0
    87  000001                     	ds	1
    88  000002                     main@viene:
    89                           	opt callstack 0
    90                           
    91                           ; 1 bytes @ 0x1
    92  000002                     	ds	1
    93  000003                     main@va:
    94                           	opt callstack 0
    95                           
    96                           ; 1 bytes @ 0x2
    97  000003                     	ds	1
    98                           
    99 ;;
   100 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   101 ;;
   102 ;; *************** function _main *****************
   103 ;; Defined at:
   104 ;;		line 26 in file "ALV.c"
   105 ;; Parameters:    Size  Location     Type
   106 ;;		None
   107 ;; Auto vars:     Size  Location     Type
   108 ;;  va              1    2[COMRAM] unsigned char 
   109 ;;  viene           1    1[COMRAM] unsigned char 
   110 ;; Return value:  Size  Location     Type
   111 ;;                  1    wreg      void 
   112 ;; Registers used:
   113 ;;		wreg, status,2, status,0, cstack
   114 ;; Tracked objects:
   115 ;;		On entry : 0/0
   116 ;;		On exit  : 0/0
   117 ;;		Unchanged: 0/0
   118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   120 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   122 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   123 ;;Total ram usage:        2 bytes
   124 ;; Hardware stack levels required when called:    3
   125 ;; This function calls:
   126 ;;		_portInit
   127 ;; This function is called by:
   128 ;;		Startup code after reset
   129 ;; This function uses a non-reentrant model
   130 ;;
   131                           
   132                           	psect	text0
   133  00002C                     __ptext0:
   134                           	opt callstack 0
   135  00002C                     _main:
   136                           	opt callstack 28
   137  00002C                     
   138                           ;ALV.c: 27:     unsigned char viene ;;ALV.c: 28:     unsigned char va ;;ALV.c: 29:     p
      +                          ortInit ( );
   139  00002C  EC92  F000         	call	_portInit	;wreg free
   140  000030                     l774:
   141                           
   142                           ;ALV.c: 32:         if (PIR1bits.RCIF == 1){
   143  000030  AA9E               	btfss	158,5,c	;volatile
   144  000032  EF1D  F000         	goto	u11
   145  000036  EF1F  F000         	goto	u10
   146  00003A                     u11:
   147  00003A  EF25  F000         	goto	l780
   148  00003E                     u10:
   149  00003E                     
   150                           ;ALV.c: 33:             viene = RCREG1;
   151  00003E  CFAE F002          	movff	4014,main@viene	;volatile
   152                           
   153                           ;ALV.c: 34:             LATB = viene;
   154  000042  C002  FF8A         	movff	main@viene,3978	;volatile
   155  000046                     
   156                           ;ALV.c: 35:             RCREG1 = 0;
   157  000046  0E00               	movlw	0
   158  000048  6EAE               	movwf	174,c	;volatile
   159  00004A                     l780:
   160                           
   161                           ;ALV.c: 37:         if(viene != va){
   162  00004A  5003               	movf	main@va^0,w,c
   163  00004C  1802               	xorwf	main@viene^0,w,c
   164  00004E  B4D8               	btfsc	status,2,c
   165  000050  EF2C  F000         	goto	u21
   166  000054  EF2E  F000         	goto	u20
   167  000058                     u21:
   168  000058  EF18  F000         	goto	l774
   169  00005C                     u20:
   170  00005C                     
   171                           ;ALV.c: 38:             if (TXSTA1bits.TRMT == 1 ){
   172  00005C  A2AC               	btfss	172,1,c	;volatile
   173  00005E  EF33  F000         	goto	u31
   174  000062  EF35  F000         	goto	u30
   175  000066                     u31:
   176  000066  EF18  F000         	goto	l774
   177  00006A                     u30:
   178  00006A                     
   179                           ;ALV.c: 39:                 va = viene +1;
   180  00006A  2802               	incf	main@viene^0,w,c
   181  00006C  6E03               	movwf	main@va^0,c
   182                           
   183                           ;ALV.c: 40:                 if(va == 58){
   184  00006E  0E3A               	movlw	58
   185  000070  1803               	xorwf	main@va^0,w,c
   186  000072  A4D8               	btfss	status,2,c
   187  000074  EF3E  F000         	goto	u41
   188  000078  EF40  F000         	goto	u40
   189  00007C                     u41:
   190  00007C  EF42  F000         	goto	l788
   191  000080                     u40:
   192  000080                     
   193                           ;ALV.c: 41:                     va = 48;
   194  000080  0E30               	movlw	48
   195  000082  6E03               	movwf	main@va^0,c
   196  000084                     l788:
   197                           
   198                           ;ALV.c: 43:                 if(va == 123){
   199  000084  0E7B               	movlw	123
   200  000086  1803               	xorwf	main@va^0,w,c
   201  000088  A4D8               	btfss	status,2,c
   202  00008A  EF49  F000         	goto	u51
   203  00008E  EF4B  F000         	goto	u50
   204  000092                     u51:
   205  000092  EF4D  F000         	goto	l792
   206  000096                     u50:
   207  000096                     
   208                           ;ALV.c: 44:                     va = 97;
   209  000096  0E61               	movlw	97
   210  000098  6E03               	movwf	main@va^0,c
   211  00009A                     l792:
   212                           
   213                           ;ALV.c: 46:                   if(va == 91){
   214  00009A  0E5B               	movlw	91
   215  00009C  1803               	xorwf	main@va^0,w,c
   216  00009E  A4D8               	btfss	status,2,c
   217  0000A0  EF54  F000         	goto	u61
   218  0000A4  EF56  F000         	goto	u60
   219  0000A8                     u61:
   220  0000A8  EF58  F000         	goto	l796
   221  0000AC                     u60:
   222  0000AC                     
   223                           ;ALV.c: 47:                     va = 65;
   224  0000AC  0E41               	movlw	65
   225  0000AE  6E03               	movwf	main@va^0,c
   226  0000B0                     l796:
   227                           
   228                           ;ALV.c: 49:                 if( va >47 && va <58 || va >96 && va <123 || va >64 && va <9
      +                          1 ){
   229  0000B0  0E2F               	movlw	47
   230  0000B2  6403               	cpfsgt	main@va^0,c
   231  0000B4  EF5E  F000         	goto	u71
   232  0000B8  EF60  F000         	goto	u70
   233  0000BC                     u71:
   234  0000BC  EF68  F000         	goto	l800
   235  0000C0                     u70:
   236  0000C0  0E39               	movlw	57
   237  0000C2  6403               	cpfsgt	main@va^0,c
   238  0000C4  EF66  F000         	goto	u81
   239  0000C8  EF68  F000         	goto	u80
   240  0000CC                     u81:
   241  0000CC  EF88  F000         	goto	l54
   242  0000D0                     u80:
   243  0000D0                     l800:
   244  0000D0  0E60               	movlw	96
   245  0000D2  6403               	cpfsgt	main@va^0,c
   246  0000D4  EF6E  F000         	goto	u91
   247  0000D8  EF70  F000         	goto	u90
   248  0000DC                     u91:
   249  0000DC  EF78  F000         	goto	l804
   250  0000E0                     u90:
   251  0000E0  0E7A               	movlw	122
   252  0000E2  6403               	cpfsgt	main@va^0,c
   253  0000E4  EF76  F000         	goto	u101
   254  0000E8  EF78  F000         	goto	u100
   255  0000EC                     u101:
   256  0000EC  EF88  F000         	goto	l54
   257  0000F0                     u100:
   258  0000F0                     l804:
   259  0000F0  0E40               	movlw	64
   260  0000F2  6403               	cpfsgt	main@va^0,c
   261  0000F4  EF7E  F000         	goto	u111
   262  0000F8  EF80  F000         	goto	u110
   263  0000FC                     u111:
   264  0000FC  EF8E  F000         	goto	l47
   265  000100                     u110:
   266  000100  0E5B               	movlw	91
   267  000102  6003               	cpfslt	main@va^0,c
   268  000104  EF86  F000         	goto	u121
   269  000108  EF88  F000         	goto	u120
   270  00010C                     u121:
   271  00010C  EF8E  F000         	goto	l47
   272  000110                     u120:
   273  000110                     l54:
   274                           
   275                           ;ALV.c: 50:                     TXREG1 = va;
   276  000110  C003  FFAD         	movff	main@va,4013	;volatile
   277                           
   278                           ;ALV.c: 51:                 va = viene;
   279  000114  C002  F003         	movff	main@viene,main@va
   280  000118  EF18  F000         	goto	l774
   281  00011C                     l47:
   282  00011C  EF18  F000         	goto	l774
   283  000120  EF14  F000         	goto	start
   284  000124                     __end_of_main:
   285                           	opt callstack 0
   286                           
   287 ;; *************** function _portInit *****************
   288 ;; Defined at:
   289 ;;		line 63 in file "ALV.c"
   290 ;; Parameters:    Size  Location     Type
   291 ;;		None
   292 ;; Auto vars:     Size  Location     Type
   293 ;;		None
   294 ;; Return value:  Size  Location     Type
   295 ;;                  1    wreg      void 
   296 ;; Registers used:
   297 ;;		wreg, status,2
   298 ;; Tracked objects:
   299 ;;		On entry : 0/0
   300 ;;		On exit  : 0/0
   301 ;;		Unchanged: 0/0
   302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   307 ;;Total ram usage:        0 bytes
   308 ;; Hardware stack levels used:    1
   309 ;; Hardware stack levels required when called:    2
   310 ;; This function calls:
   311 ;;		Nothing
   312 ;; This function is called by:
   313 ;;		_main
   314 ;; This function uses a non-reentrant model
   315 ;;
   316                           
   317                           	psect	text1
   318  000124                     __ptext1:
   319                           	opt callstack 0
   320  000124                     _portInit:
   321                           	opt callstack 28
   322  000124                     
   323                           ;ALV.c: 64:     ADCON1bits.PCFG = 0xFF;
   324  000124  0E0F               	movlw	15
   325  000126  12C1               	iorwf	193,f,c	;volatile
   326                           
   327                           ;ALV.c: 65:     LATC=0;
   328  000128  0E00               	movlw	0
   329  00012A  6E8B               	movwf	139,c	;volatile
   330  00012C                     
   331                           ;ALV.c: 66:     TRISCbits.RC6 = 0;
   332  00012C  9C94               	bcf	148,6,c	;volatile
   333  00012E                     
   334                           ;ALV.c: 67:     TRISCbits.RC7 = 1;
   335  00012E  8E94               	bsf	148,7,c	;volatile
   336  000130  0E31               	movlw	49
   337  000132  6EAF               	movwf	175,c	;volatile
   338  000134                     
   339                           ;ALV.c: 70:     TXSTAbits.BRGH = 1 ;
   340  000134  84AC               	bsf	172,2,c	;volatile
   341  000136                     
   342                           ;ALV.c: 71:     BAUDCONbits.BRG16 = 1;
   343  000136  86B8               	bsf	184,3,c	;volatile
   344  000138                     
   345                           ;ALV.c: 73:     TXSTA1bits.TX9 = 0;
   346  000138  9CAC               	bcf	172,6,c	;volatile
   347  00013A                     
   348                           ;ALV.c: 74:     TXSTA1bits.TXEN = 1;
   349  00013A  8AAC               	bsf	172,5,c	;volatile
   350  00013C                     
   351                           ;ALV.c: 75:     TXSTA1bits.SYNC = 0;
   352  00013C  98AC               	bcf	172,4,c	;volatile
   353  00013E                     
   354                           ;ALV.c: 76:     RCSTA1bits.SPEN = 1;
   355  00013E  8EAB               	bsf	171,7,c	;volatile
   356  000140                     
   357                           ;ALV.c: 77:     RCSTA1bits.RX9 = 0;
   358  000140  9CAB               	bcf	171,6,c	;volatile
   359  000142                     
   360                           ;ALV.c: 78:     RCSTA1bits.CREN = 1;
   361  000142  88AB               	bsf	171,4,c	;volatile
   362  000144  0012               	return		;funcret
   363  000146                     __end_of_portInit:
   364                           	opt callstack 0
   365                           
   366 ;; *************** function _low_isr *****************
   367 ;; Defined at:
   368 ;;		line 19 in file "ALV.c"
   369 ;; Parameters:    Size  Location     Type
   370 ;;		None
   371 ;; Auto vars:     Size  Location     Type
   372 ;;		None
   373 ;; Return value:  Size  Location     Type
   374 ;;                  1    wreg      void 
   375 ;; Registers used:
   376 ;;		None
   377 ;; Tracked objects:
   378 ;;		On entry : 0/0
   379 ;;		On exit  : 0/0
   380 ;;		Unchanged: 0/0
   381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   384 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   385 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   386 ;;Total ram usage:        1 bytes
   387 ;; Hardware stack levels used:    1
   388 ;; Hardware stack levels required when called:    1
   389 ;; This function calls:
   390 ;;		Nothing
   391 ;; This function is called by:
   392 ;;		Interrupt level 1
   393 ;; This function uses a non-reentrant model
   394 ;;
   395                           
   396                           	psect	intcodelo
   397  000018                     __pintcodelo:
   398                           	opt callstack 0
   399  000018                     _low_isr:
   400                           	opt callstack 28
   401                           
   402                           ;incstack = 0
   403  000018  8004               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   404  00001A  CFE0 F001          	movff	bsr,??_low_isr
   405  00001E                     
   406                           ;ALV.c: 20:     __nop();
   407  00001E  F000               	nop	
   408  000020  C001  FFE0         	movff	??_low_isr,bsr
   409  000024  9004               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   410  000026  0010               	retfie	
   411  000028                     __end_of_low_isr:
   412                           	opt callstack 0
   413                           
   414 ;; *************** function _high_isr *****************
   415 ;; Defined at:
   416 ;;		line 15 in file "ALV.c"
   417 ;; Parameters:    Size  Location     Type
   418 ;;		None
   419 ;; Auto vars:     Size  Location     Type
   420 ;;		None
   421 ;; Return value:  Size  Location     Type
   422 ;;                  1    wreg      void 
   423 ;; Registers used:
   424 ;;		None
   425 ;; Tracked objects:
   426 ;;		On entry : 0/0
   427 ;;		On exit  : 0/0
   428 ;;		Unchanged: 0/0
   429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   434 ;;Total ram usage:        0 bytes
   435 ;; Hardware stack levels used:    1
   436 ;; This function calls:
   437 ;;		Nothing
   438 ;; This function is called by:
   439 ;;		Interrupt level 2
   440 ;; This function uses a non-reentrant model
   441 ;;
   442                           
   443                           	psect	intcode
   444  000008                     __pintcode:
   445                           	opt callstack 0
   446  000008                     _high_isr:
   447                           	opt callstack 28
   448                           
   449                           ;incstack = 0
   450  000008  8204               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   451  00000A  EDA8  F000         	call	int_func,f	;refresh shadow registers
   452                           
   453                           	psect	intcode_body
   454  000150                     __pintcode_body:
   455                           	opt callstack 28
   456  000150                     int_func:
   457                           	opt callstack 28
   458  000150  0006               	pop		; remove dummy address from shadow register refresh
   459  000152                     
   460                           ;ALV.c: 16:     __nop();
   461  000152  F000               	nop	
   462  000154  9204               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   463  000156  0011               	retfie		f
   464  000158                     __end_of_high_isr:
   465                           	opt callstack 0
   466  0000                     
   467                           	psect	rparam
   468  0000                     
   469                           	psect	temp
   470  000004                     btemp:
   471                           	opt callstack 0
   472  000004                     	ds	1
   473  0000                     int$flags	set	btemp
   474  0000                     wtemp8	set	btemp+1
   475  0000                     ttemp5	set	btemp+1
   476  0000                     ttemp6	set	btemp+4
   477  0000                     ttemp7	set	btemp+8
   478                           tosu	equ	0xFFF
   479                           tosh	equ	0xFFE
   480                           tosl	equ	0xFFD
   481                           stkptr	equ	0xFFC
   482                           pclatu	equ	0xFFB
   483                           pclath	equ	0xFFA
   484                           pcl	equ	0xFF9
   485                           tblptru	equ	0xFF8
   486                           tblptrh	equ	0xFF7
   487                           tblptrl	equ	0xFF6
   488                           tablat	equ	0xFF5
   489                           prodh	equ	0xFF4
   490                           prodl	equ	0xFF3
   491                           indf0	equ	0xFEF
   492                           postinc0	equ	0xFEE
   493                           postdec0	equ	0xFED
   494                           preinc0	equ	0xFEC
   495                           plusw0	equ	0xFEB
   496                           fsr0h	equ	0xFEA
   497                           fsr0l	equ	0xFE9
   498                           wreg	equ	0xFE8
   499                           indf1	equ	0xFE7
   500                           postinc1	equ	0xFE6
   501                           postdec1	equ	0xFE5
   502                           preinc1	equ	0xFE4
   503                           plusw1	equ	0xFE3
   504                           fsr1h	equ	0xFE2
   505                           fsr1l	equ	0xFE1
   506                           bsr	equ	0xFE0
   507                           indf2	equ	0xFDF
   508                           postinc2	equ	0xFDE
   509                           postdec2	equ	0xFDD
   510                           preinc2	equ	0xFDC
   511                           plusw2	equ	0xFDB
   512                           fsr2h	equ	0xFDA
   513                           fsr2l	equ	0xFD9
   514                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      3       3
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          244      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     225
                                              1 COMRAM     2     2      0
                           _portInit
 ---------------------------------------------------------------------------------
 (1) _portInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _low_isr                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _portInit

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      3       3       1        3.2%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
DATA                 0      0       0       4        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12           F4      0       0      29        0.0%
BANK12              F4      0       0      30        0.0%
BIGRAM             CF3      0       0      31        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Aug 19 15:58:42 2019

                     l70 0144                       l54 0110                       l47 011C  
                     l69 0130                       u10 003E                       u11 003A  
                     u20 005C                       u21 0058                       u30 006A  
                     u31 0066                       u40 0080                       u41 007C  
                     u50 0096                       u51 0092                       u60 00AC  
                     u61 00A8                       u70 00C0                       u71 00BC  
                     u80 00D0                       u81 00CC                       u90 00E0  
                     u91 00DC                       bsr 000FE0              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
                    l800 00D0                      l802 00E0                      l804 00F0  
                    l750 012E                      l806 0100                      l760 013C  
                    l752 0134                      l762 013E                      l754 0136  
                    l746 0124                      l764 0140                      l756 0138  
                    l748 012C                      l780 004A                      l772 002C  
                    l766 0142                      l758 013A                      l790 0096  
                    l782 005C                      l774 0030                      l792 009A  
                    l784 006A                      l776 003E                      l794 00AC  
                    l786 0080                      l778 0046                      l796 00B0  
                    l788 0084                      l798 00C0             __CFG_CPB$OFF 000000  
                    u100 00F0                      u101 00EC                      u110 0100  
                    u111 00FC                      u120 0110                      u121 010C  
           __CFG_CPD$OFF 000000               _TXSTA1bits 000FAC             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     _LATB 000F8A                     _LATC 000F8B  
                   i1l40 0020                     i2l35 0154             __CFG_PWRT$ON 000000  
                   _main 002C                     btemp 0004                     start 0028  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
                  ?_main 0001                    i1l770 001E                    i2l768 0152  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000          __end_of_low_isr 0028  
         __CFG_BOREN$OFF 000000                    ttemp5 0005                    ttemp6 0008  
                  ttemp7 000C                    status 000FD8                    wtemp8 0005  
         __CFG_PBADEN$ON 000000          __initialization 0146             __end_of_main 0124  
         __CFG_OSC$HSPLL 000000                   ??_main 0002            __activetblptr 000000  
        __CFG_BBSIZ$1024 000000                   _RCREG1 000FAE                   _SPBRG1 000FAF  
                 _TXREG1 000FAD           __CFG_XINST$OFF 000000         __end_of_high_isr 0158  
         __CFG_STVREN$ON 000000                   main@va 0003         __end_of_portInit 0146  
              ??_low_isr 0001               __accesstop 0060  __end_of__initialization 0146  
          ___rparam_used 000001           __pcstackCOMRAM 0001                ?_high_isr 0001  
                __Hparam 0000                  __Lparam 0000                ?_portInit 0001  
                __pcinit 0146                  __ramtop 0D00                  __ptext0 002C  
                __ptext1 0124                  _low_isr 0018               ??_high_isr 0001  
         __pintcode_body 0150     end_of_initialization 0146                  int_func 0150  
             ??_portInit 0002                _TRISCbits 000F94                _TXSTAbits 000FAC  
            _BAUDCONbits 000FB8      start_initialization 0146         __CFG_LPT1OSC$OFF 000000  
      __size_of_high_isr 0150                __pintcode 0008              __pintcodelo 0018  
      __size_of_portInit 0022                 ?_low_isr 0001                 _PIR1bits 000F9E  
       __CFG_WDTPS$32768 000000               _ADCON1bits 000FC1                main@viene 0002  
               __Hrparam 0000                 __Lrparam 0000         __size_of_low_isr 0010  
               _high_isr 0008            __size_of_main 00F8                 _portInit 0124  
               int$flags 0004                 intlevel1 0000                 intlevel2 0000  
             _RCSTA1bits 000FAB  
